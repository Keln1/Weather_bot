import aiohttp
from config import OPENWEATHER_API_KEY, OPENWEATHER_BASE_URL


async def get_current_weather(city: str, lang: str = "uk") -> str:
    """–ó–∞–ø–∏—Ç—É—î –ø–æ—Ç–æ—á–Ω—É –ø–æ–≥–æ–¥—É –≤ –º—ñ—Å—Ç—ñ."""
    url = f"{OPENWEATHER_BASE_URL}/weather"
    params = {
        "q": city,
        "appid": OPENWEATHER_API_KEY,
        "units": "metric",
        "lang": lang
    }
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, params=params, timeout=10) as response:
                data = await response.json()
                if response.status != 200:
                    return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {data.get('message', '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≥–æ–¥—É')}"
                weather_desc = data["weather"][0]["description"].capitalize()
                temp = data["main"]["temp"]
                feels_like = data["main"]["feels_like"]
                humidity = data["main"]["humidity"]
                wind_speed = data["wind"]["speed"]
                return (
                    f"üå§ –ü–æ–≥–æ–¥–∞ –≤ –º—ñ—Å—Ç—ñ *{city.title()}*:\n\n"
                    f"‚Ä¢ {weather_desc}\n"
                    f"‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                    f"‚Ä¢ –í—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫: {feels_like}¬∞C\n"
                    f"‚Ä¢ –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\n"
                    f"‚Ä¢ –í—ñ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
                )
    except aiohttp.ClientError:
        return "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ –¥–æ —Å–µ—Ä–≤—ñ—Å—É –ø–æ–≥–æ–¥–∏."


async def get_forecast_5days(city: str, lang: str = "uk") -> str:
    """–ó–∞–ø–∏—Ç—É—î 5-–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ —Ç–∞ –≥—Ä—É–ø—É—î –¥–∞–Ω—ñ –∑–∞ –¥–Ω—è–º–∏."""
    url = f"{OPENWEATHER_BASE_URL}/forecast"
    params = {
        "q": city,
        "appid": OPENWEATHER_API_KEY,
        "units": "metric",
        "lang": lang
    }
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url, params=params, timeout=10) as response:
                data = await response.json()
                if response.status != 200:
                    return f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {data.get('message', '–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑')}"
                forecast_list = data.get("list", [])
                if not forecast_list:
                    return "‚ö†Ô∏è –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—É."

                from collections import defaultdict
                grouped = defaultdict(list)
                for entry in forecast_list:
                    date = entry["dt_txt"].split(" ")[0]
                    grouped[date].append(entry)

                days = sorted(grouped.keys())
                from datetime import datetime
                lines = [f"üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ 5 –¥–Ω—ñ–≤ —É *{city.title()}*:\n"]
                for day in days[:5]:
                    entries = grouped[day]
                    chosen = next((entry for entry in entries if "12:00:00" in entry["dt_txt"]), entries[0])
                    dt_obj = datetime.strptime(day, "%Y-%m-%d")
                    formatted_date = dt_obj.strftime("%d.%m.%Y")
                    desc = chosen["weather"][0]["description"].capitalize()
                    temp = chosen["main"]["temp"]
                    temp_min = chosen["main"]["temp_min"]
                    temp_max = chosen["main"]["temp_max"]
                    wind_speed = chosen["wind"]["speed"]
                    humidity = chosen["main"]["humidity"]
                    lines.append(
                        f"üìç *{formatted_date}*\n"
                        f"‚Ä¢ {desc}\n"
                        f"‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–º—ñ–Ω: {temp_min}¬∞C, –º–∞–∫—Å: {temp_max}¬∞C)\n"
                        f"‚Ä¢ –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\n"
                        f"‚Ä¢ –í—ñ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
                    )
                return "\n".join(lines)
    except aiohttp.ClientError:
        return "‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ –¥–æ —Å–µ—Ä–≤—ñ—Å—É –ø—Ä–æ–≥–Ω–æ–∑—É –ø–æ–≥–æ–¥–∏."
