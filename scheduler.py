from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from datetime import datetime
import pytz
from database import get_user_settings, get_user_notify_days
from weather_api import get_current_weather, get_forecast_5days
from aiogram import Bot

scheduler = AsyncIOScheduler()


async def send_daily_weather(bot, user_id: int):
    """–ù–∞–¥—Å–∏–ª–∞—î —â–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É."""
    city, notify_time = get_user_settings(user_id)
    if not city:
        return
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —Å—å–æ–≥–æ–¥–Ω—ñ
    notify_days = get_user_notify_days(user_id)
    if notify_days:
        today = datetime.now(pytz.timezone('Europe/Kiev')).isoweekday()
        if today not in notify_days:
            return
    
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏
        weather_text = await get_current_weather(city)
        forecast_text = await get_forecast_5days(city)
        
        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await bot.send_message(
            user_id,
            f"üåÖ *–î–æ–±—Ä–æ–≥–æ —Ä–∞–Ω–∫—É!*\n\n"
            f"–û—Å—å –≤–∞—à —â–æ–¥–µ–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏:\n\n"
            f"{weather_text}\n\n"
            f"{forecast_text}"
        )
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}: {e}")


def setup_notifications(bot):
    """–ù–∞–ª–∞—à—Ç–æ–≤—É—î —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–ª—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤."""
    from database import get_all_users
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    users = get_all_users()
    
    # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    for user_id, city, notify_time, notify_days in users:
        if notify_time:
            try:
                # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–µ –∑–∞–≤–¥–∞–Ω–Ω—è, —è–∫—â–æ –≤–æ–Ω–æ —ñ—Å–Ω—É—î
                job_id = f"user_{user_id}"
                try:
                    scheduler.remove_job(job_id)
                except:
                    pass
                
                # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è
                hour, minute = notify_time.split(":")
                scheduler.add_job(
                    send_daily_weather,
                    trigger=CronTrigger(hour=int(hour), minute=int(minute)),
                    args=[bot, user_id],
                    id=job_id,
                    replace_existing=True
                )
            except Exception as e:
                print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—ñ —Å–ø–æ–≤—ñ—â–µ–Ω—å –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}: {e}")


def start_scheduler(bot):
    """–ó–∞–ø—É—Å–∫–∞—î –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫."""
    setup_notifications(bot)
    scheduler.start()
